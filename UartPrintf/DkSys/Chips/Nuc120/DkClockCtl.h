#ifndef DK_CLOCKCTL_H
#define DK_CLOCKCTL_H

#include "DkSys.h"

#define CLK_INTERN_HIGH_SPEED		22118400UL
#define CLK_EXTERN_HIGH_SPEED		12000000UL
#define CLK_INTERN_LOW_SPEED		10000UL
#define CLK_EXTERN_LOW_SPEED		32768UL

#define CLK_BA					0x50000200
#define PWRCON					CLK_BA + 0x00
#define AHBCLK					CLK_BA + 0x04
#define APBCLK					CLK_BA + 0x08
#define CLKSTATUS				CLK_BA + 0x0C
#define CLKSEL0					CLK_BA + 0x10
#define CLKSEL1					CLK_BA + 0x14
#define CLKSEL2					CLK_BA + 0x1C
#define CLKDIV					CLK_BA + 0x18
#define PLLCON					CLK_BA + 0x20
#define FRQDIV					CLK_BA + 0x24

#define CLK_PWR_DOWN_WAIT_CPU				0x0100
#define CLK_PWR_DOWN_ENABLE					0x0080
#define CLK_PWR_DOWN_WAKE_UP_INT_STAT		0x0040
#define CLK_PWR_DOWN_WAKE_UP_INT_ENA		0x0020
#define CLK_PWR_DOWN_WAKE_UP_DELAY			0x0010

#define CLK_ENA_POWER_CONFIG(PwrCfgs, Enable)		ENABLE_BITS(PWRCON, Enable, PwrCfgs)

#define CLK_SOURCE_INTL_10KHZ				0x0008
#define CLK_SOURCE_INTL_22_1184MHZ			0x0004
#define CLK_SOURCE_EXTL_32_768KHZ			0x0002
#define CLK_SOURCE_EXTL_12MHZ				0x0001
#define CLK_SOURCE_EXTL_4TO24MHZ			CLK_SOURCE_EXTL_12MHZ

#define CLK_ENA_CLOCK_SOURCE(ClockSrcs, Enable)		ENABLE_BITS(PWRCON, Enable, ClockSrcs)

#define CLK_CTRL_PS2						0x80000000
#define CLK_CTRL_ACMP						0x40000000
#define CLK_CTRL_I2S						0x20000000
#define CLK_CTRL_ADC						0x10000000
#define CLK_CTRL_USBD						0x08000000
#define CLK_CTRL_PWM67						0x00800000
#define CLK_CTRL_PWM45						0x00400000
#define CLK_CTRL_PWM23						0x00200000
#define CLK_CTRL_PWM01						0x00100000
#define CLK_CTRL_UART2						0x00040000
#define CLK_CTRL_UART1						0x00020000
#define CLK_CTRL_UART0						0x00010000
#define CLK_CTRL_SPI3						0x00008000
#define CLK_CTRL_SPI2						0x00004000
#define CLK_CTRL_SPI1						0x00002000
#define CLK_CTRL_SPI0						0x00001000
#define CLK_CTRL_I2C1						0x00000200
#define CLK_CTRL_I2C0						0x00000100
#define CLK_CTRL_FDIV						0x00000040
#define CLK_CTRL_TMR3						0x00000020
#define CLK_CTRL_TMR2						0x00000010
#define CLK_CTRL_TMR1						0x00000008
#define CLK_CTRL_TMR0						0x00000004
#define CLK_CTRL_RTC						0x00000002
#define CLK_CTRL_WDT						0x00000001

#define CLK_ENA_CTRL_CLOCK(CtrlClk, Enable)		ENABLE_BITS(APBCLK, Enable, CtrlClk)

#define CLK_STATUS_SWITCH_FAILED				0x80
#define CLK_STATUS()							IO_MMAP(CLKSTATUS)

#define CLK_IS_INT_22_1184MHZ_STABLE()			GET_BIT((CLKSTATUS), BIT_NO_4)
#define CLK_IS_PLL_STABLE()						GET_BIT((CLKSTATUS), BIT_NO_2)
#define CLK_IS_EXT_4TO24MHZ_STABLE()			GET_BIT((CLKSTATUS), BIT_NO_0)

#define CLK_SYSTICK_SRC_EXTL_4TO24MHZ			0
#define	CLK_SYSTICK_SRC_EXTL_32_768KHZ			1
#define CLK_SYSTICK_SRC_EXTL_4TO24MHZ_DIV_2		2
#define CLK_SYSTICK_SRC_HCLK_DIV_2				3
#define CLK_SYSTICK_SRC_INTL_22_1184MHZ_DIV_2	7

#define CLK_SET_SYSTICK_SOURCE(SysTickSrc)		SET_BITS(CLKSEL0, BIT_NO_3, BIT_MASK_3_BITS, SysTickSrc)

#define CLK_GET_SYSTICK_SOURCE()				GET_BITS(CLKSEL0, BIT_NO_3, BIT_MASK_3_BITS)

#define CLK_UART_SRC_EXTL_4TO24MHZ				0
#define CLK_UART_SRC_PLL						1
#define CLK_UART_SRC_INTL_22_1184MHZ			3

#define CLK_SET_UART_CTRL_SRC(UartClkSrc)		SET_BITS(CLKSEL1, BIT_NO_24, BIT_MASK_2_BITS, UartClkSrc)

#define CLK_GET_UART_CTRL_SRC()					GET_BITS(CLKSEL1, BIT_NO_24, BIT_MASK_2_BITS)

#define CLK_SET_UART_DEVIDER(Devider)			SET_BITS(CLKDIV, BIT_NO_8, BIT_MASK_4_BITS, Devider)

#define CLK_GET_UART_DEVIDER()					GET_BITS(CLKDIV, BIT_NO_8, BIT_MASK_4_BITS)

#define CLK_ADC_SRC_EXTL_4TO24MHZ				0
#define CLK_ADC_SRC_PLL							1
#define CLK_ADC_SRC_INTL_22_1184MHZ				3

#define CLK_SET_ADC_CTRL_SRC(AdcClkSrc)			SET_BITS(CLKSEL1, BIT_NO_2, BIT_MASK_2_BITS, AdcClkSrc)

#define CLK_SET_ADC_DEVIDER(Devider)			SET_BITS(CLKDIV, BIT_NO_16, BIT_MASK_8_BITS, Devider)

#define CLK_PWM_SRC_EXTL_4TO24MHZ				0x0
#define CLK_PWM_SRC_EXTL_32_768KHZ				0x1
#define CLK_PWM_SRC_HCLK						0x2
#define CLK_PWM_SRC_INTL_22_1184MHZ				0x3

#define CLK_SET_PWM_0_1_CTRL_SRC(PwmClkSrc)		SET_BITS(CLKSEL1, BIT_NO_28, BIT_MASK_2_BITS, PwmClkSrc)

#define CLK_SET_PWM_2_3_CTRL_SRC(PwmClkSrc)		SET_BITS(CLKSEL1, BIT_NO_30, BIT_MASK_2_BITS, PwmClkSrc)

#define CLK_SET_PWM_4_5_CTRL_SRC(PwmClkSrc)		SET_BITS(CLKSEL2, BIT_NO_4, BIT_MASK_2_BITS, PwmClkSrc)

#define CLK_SET_PWM_6_7_CTRL_SRC(PwmClkSrc)		SET_BITS(CLKSEL2, BIT_NO_6, BIT_MASK_2_BITS, PwmClkSrc)

#define CLK_HCLK_SRC_EXTL_4TO24MHZ				0
#define CLK_HCLK_SRC_EXTL_32_768KHZ				1
#define CLK_HCLK_SRC_PLL						2
#define CLK_HCLK_SRC_INTL_10KHZ					3
#define CLK_HCLK_SRC_INTL_22_1184MHZ			7

#define CLK_SET_HCLK_SOURCE(HCLKSource)			SET_BITS(CLKSEL0, BIT_NO_0, BIT_MASK_3_BITS, HCLKSource)

#define CLK_GET_HCLK_SOURCE()					GET_BITS(CLKSEL0, BIT_NO_0, BIT_MASK_3_BITS)

#define CLK_PLL_OPT_CLK_SRC_22_1184MHZ			0x00080000
#define CLK_PLL_OPT_FIXED_LOW					0x00040000
#define CLK_PLL_OPT_BYPASS						0x00020000
#define CLK_PLL_OPT_POWER_DOWN_MODE				0x00010000

#define CLK_PLL_SET_OPTS(ClkPLLOpts, Set)		ENABLE_BITS(PLLCON, Set, ClkPLLOpts)

#define CLK_PLL_SRC_EXTERN_4TO24MHZ				0x0
#define CLK_PLL_SRC_EXTERN_12MHZ				CLK_PLL_SRC_EXTERN_4TO24MHZ
#define CLK_PLL_SRC_INTERN_22_1184MHZ			0x1

#define CLK_PLL_SET_SOURCE(ClkPllSrc)			ENABLE_BIT(PLLCON, BIT_NO_19, ClkPllSrc)

#define CLK_PLL_GET_SOURCE()					GET_BIT((PLLCON), BIT_NO_19)

#define CLK_PLL_ENABLE(Ena)						(Ena) ? (CLR_BIT((PLLCON), BIT_NO_18)) : (SET_BIT((PLLCON), BIT_NO_18))

#define CLK_PLL_ENA_BYPASS(Ena)					ENABLE_BIT(PLLCON, BIT_NO_17, Ena)

#define CLK_PLL_ENA_PWR_DOWN(Ena)				ENABLE_BIT(PLLCON, BIT_NO_16, Ena)

#define CLK_PLL_SET_DIVIDER(OutDiv, InDiv, FeedBackDiv)	\
	IO_MMAP(PLLCON) = (IO_MMAP(PLLCON) & ~(0xFFFF)) |	\
	(((OutDiv & 0x3) << BIT_NO_14) | ((InDiv & 0x1F) << BIT_NO_9) | (FeedBackDiv & 0x1FF))

#define CLK_PLL_GET_OUT_DIV()					GET_BITS(PLLCON, BIT_NO_14, BIT_MASK_2_BITS)
#define CLK_PLL_GET_IN_DIV()					GET_BITS(PLLCON, BIT_NO_9, BIT_MASK_5_BITS)
#define CLK_PLL_GET_FB_DIV()					GET_BITS(PLLCON, BIT_NO_0, BIT_MASK_9_BITS)

#define CLK_GET_HCLK_DIV()						GET_BITS(CLKDIV, BIT_NO_0, BIT_MASK_4_BITS)

#endif   // End of DK_CLOCKCTL_H
